table.table.table-bordered.reviews
  tr
    th Owner
    th Repository
    th Pull Request
    th Incomplete
    th Completed
    th Due
  - for review in reviews.order('state desc, due_at asc')
    tr.review
      td.owner
        == slim :_avatar, locals: {user: review.user}
      td.repo
        a href="#{GITHUB_BASE}/#{review.repo.path}"
          = review.repo.path
      td.title
        a href="#{GITHUB_BASE}/#{review.repo.path}/pull/#{review.pull_number}"
          = review.title
      td.incomplete
        ul.reviewers
          - for status in review.reviewer_statuses.reject(&:completed_at)
            == slim :_avatar, locals: {user: status.user}
      td.completed
        ul.reviewers
          - for status in review.reviewer_statuses.select(&:completed_at)
            == slim :_avatar, locals: {user: status.user}      
        - if review.due_at
            td.due= due_date_text(review.due_at)
        - else
            td.no_due= 'Due date not set'